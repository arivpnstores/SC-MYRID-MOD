#!/bin/bash
Green="\e[92;1m"
RED="\033[31m"
YELLOW="\033[33m"
BLUE="\033[36m"
FONT="\033[0m"
GREENBG="\033[42;37m"
REDBG="\033[41;37m"
OK="${Green}--->${FONT}"
ERROR="${RED}[ERROR]${FONT}"
GRAY="\e[1;30m"
NC='\e[0m'
red='\e[1;31m'
green='\e[0;32m'
DF='\e[39m'
Bold='\e[1m'
g="\033[1;92m"
y='\033[1;33m' #yellow
Blink='\e[5m'
yell='\e[33m'
red='\e[31m'
green='\e[32m'
blue='\e[34m'
PURPLE='\e[35m'
cyan='\e[36m'
Lred='\e[91m'
Lgreen='\e[92m'
Lyellow='\e[93m'
NC='\e[0m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
LIGHT='\033[0;37m'
grenbo="\e[92;1m"
red() { echo -e "\\033[32;1m${*}\\033[0m"; }
# Getting
export CHATID="1210833546"
export KEY="6006599143:AAEgstCAioq35JgX97HaW_G3TAkLKzLZS_w"
export TIME="10"
export URL="https://api.telegram.org/bot$KEY/sendMessage"
clear
#IZIN SCRIPT
MYIP=$(curl -sS ipv4.icanhazip.com)
echo -e "\e[32mloading...\e[0m"
clear
# Valid Script
ipsaya=$(wget -qO- ipinfo.io/ip)
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
data_ip="https://raw.githubusercontent.com/irawancandra6699/izin/main/ip"
#data_ip="https://abc.xcodehoster.com/izin"
checking_sc() {
  useexp=$(wget -qO- $data_ip | grep $ipsaya | awk '{print $3}')
  if [[ $date_list < $useexp ]]; then
    echo -ne
  else
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    echo -e "\033[42m          404 NOT FOUND AUTOSCRIPT          \033[0m"
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    echo -e ""
    echo -e "            ${RED}PERMISSION DENIED !${NC}"
    echo -e "   \033[0;33mYour VPS${NC} $ipsaya \033[0;33mHas been Banned${NC}"
    echo -e "     \033[0;33mBuy access permissions for scripts${NC}"
    echo -e "             \033[0;33mContact Admin :${NC}"
    echo -e "      \033[0;36mTelegram${NC} t.me/CandraVpnz"
    echo -e "      ${GREEN}WhatsApp${NC} wa.me/6281573872702"
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    exit
  fi
}
checking_sc
echo -e "\e[32mloading...\e[0m"
clear
function lockssh() {
    clear
    echo -e "  ${OR}──────────────────────────────────────${NC}"
    printf "\e[1;92m    .::.\e[0m\e[1;77m  Lock SSH Ovpn Account  \e[1;92m.::.\e[0m\n"
    echo -e "  ${OR}──────────────────────────────────────${NC}"
    NUMBER_OF_CLIENTS=$(grep -c -E "^### " "/etc/ssh/.ssh.db")
    if [[ ${NUMBER_OF_CLIENTS} == '0' ]]; then
        echo ""
        echo "   You have no existing clients!"
        echo ""
        exit 0
    fi
    echo ""
    echo "     NO  USERNAME     EXPIRED"
    echo "     ------------------------"
    grep -E "^### " "/etc/ssh/.ssh.db" | cut -d ' ' -f 2-3 | column -t | nl -s ') '
    until [[ ${CLIENT_NUMBER} -ge 1 && ${CLIENT_NUMBER} -le ${NUMBER_OF_CLIENTS} ]]; do
        if [[ ${CLIENT_NUMBER} == '1' ]]; then
            read -rp "Select one client [1]: " CLIENT_NUMBER
        else
            echo ""
            until [[ $CLIENT_NUMBER =~ ^[0-9]+$ ]]; do
                read -rp "     Select one client [1-${NUMBER_OF_CLIENTS}]: " CLIENT_NUMBER
            done
            username=$(grep -E "^### " "/etc/ssh/.ssh.db" | cut -d ' ' -f 2 | sed -n "${CLIENT_NUMBER}"p)
            clear
            egrep "^$username" /etc/passwd >/dev/null
            passwd -l $username
            clear
            echo "-----------------------------------------------"
            echo -e "Username ${grenbo}$username${NC} successfully ${red}LOCKED!${NC}."
            echo -e "Access Login to username ${grenbo}$username${NC} has been locked."
            echo "-----------------------------------------------"
            exit 0
        fi
    done
}

function unlockssh() {
    clear
    echo -e "  ${OR}──────────────────────────────────────${NC}"
    printf "\e[1;92m   .::.\e[0m\e[1;77m  Unlock SSH Ovpn Account  \e[1;92m.::.\e[0m\n"
    echo -e "  ${OR}──────────────────────────────────────${NC}"
    NUMBER_OF_CLIENTS=$(grep -c -E "^### " "/etc/ssh/.ssh.db")
    if [[ ${NUMBER_OF_CLIENTS} == '0' ]]; then
        echo ""
        echo "   You have no existing clients!"
        echo ""
        exit 0
    fi
    echo ""
    echo "     NO  USERNAME     EXPIRED"
    echo "     ------------------------"
    grep -E "^### " "/etc/ssh/.ssh.db" | cut -d ' ' -f 2-3 | column -t | nl -s ') '
    until [[ ${CLIENT_NUMBER} -ge 1 && ${CLIENT_NUMBER} -le ${NUMBER_OF_CLIENTS} ]]; do
        if [[ ${CLIENT_NUMBER} == '1' ]]; then
            read -rp "Select one client [1]: " CLIENT_NUMBER
        else
            echo ""
            until [[ $CLIENT_NUMBER =~ ^[0-9]+$ ]]; do
                read -rp "     Select one client [1-${NUMBER_OF_CLIENTS}]: " CLIENT_NUMBER
            done
            username=$(grep -E "^### " "/etc/ssh/.ssh.db" | cut -d ' ' -f 2 | sed -n "${CLIENT_NUMBER}"p)
            clear
            egrep "^$username" /etc/passwd >/dev/null
            passwd -u $username
            clear
            echo "-------------------------------------------"
            echo -e "Username ${grenbo}$username${NC} successfully ${green}UNLOCKED${NC}."
            echo -e "Access for Username ${grenbo}$username${NC} has been restored"
            echo "-------------------------------------------"
            exit 0
        fi
    done

}
#Domain
domain=$(cat /etc/xray/domain)

echo -e " ${y}  ┌───────────────────────────────┐$NC"
echo -e " ${y}  │${NC}${g}.::.${NC} MENU SSH OVPN MANAGER ${g}.::. $NC"
echo -e " ${y}  └───────────────────────────────┘$NC"
echo -e    "\033[1;33m  ┌──────────────────────────────────────────┐\033[0m"
echo -e "  ${y}│${NC}${g} 01.${NC}\033[0;36m Create SSH & OpenVPN Account${NC}"
echo -e "  ${y}│${NC}${g} 02.${NC}\033[0;36m Trial SSH & OpenVPN ${NC}"
echo -e "  ${y}│${NC}${g} 03.${NC}\033[0;36m Renew SSH & OpenVPN ${NC}"
echo -e "  ${y}│${NC}${g} 04.${NC}\033[0;36m Check User Login SSH & OpenVPN${NC}"
echo -e "  ${y}│${NC}${g} 05.${NC}\033[0;36m Daftar Member SSH & OpenVPN ${NC}"
echo -e "  ${y}│${NC}${g} 06.${NC}\033[0;36m Hapus SSH & OpenVpn Account ${NC}"
echo -e "  ${y}│${NC}${g} 07.${NC}\033[0;36m Hapus User Expired SSH & OpenVPN ${NC}"
echo -e "  ${y}│${NC}${g} 08.${NC}\033[0;36m Set up Autokill SSH ${NC}"
echo -e "  ${y}│${NC}${g} 09.${NC}\033[0;36m Cek User Multi Login SSH ${NC}"
echo -e "  ${y}│${NC}${g} 10.${NC}\033[0;36m Cek Detail Akun SSH ${NC}"
echo -e "  ${y}│${NC}${g} 11.${NC}\033[0;36m Lock Akun SSH ${NC}"
echo -e "  ${y}│${NC}${g} 12.${NC}\033[0;36m Unlock Detail Akun SSH ${NC}"
echo -e "  ${y}│${NC}${g} x.${NC}\033[0;36m Exit Ssh Ovpn Manager${NC}"
echo -e "\033[1;33m  └──────────────────────────────────────────┘\033[0m"
read -p "Select From Options [ 1 - 10 ] : " menu
echo -e ""
case $menu in
1)
    addssh
    ;;
2)
    trial
    ;;
3)
    renewssh
    ;;
4)
    cekssh
    ;;
5)
    member
    ;;
6)
    delssh
    ;;
7)
    delexp
    ;;
8)
    autokill
    ;;
9)
    ceklim
    ;;
10)
    user-ssh
    ;;    
11)
   lockssh
   ;;
12)
   unlockssh
   ;;
*)
    menu
    ;;
esac
